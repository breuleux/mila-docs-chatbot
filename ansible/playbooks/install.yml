---
- hosts: all
  vars:
    app_config_defaults:
      data_dir: "{{ app_data_dir }}"
      buster:
        retriever_cfg:
          path: "{{ app_data_dir }}/deeplake"

    buster_run: "python -m buster_service --config {{ app_config_dir }}/mila-config.yaml --config {{ app_config }} --config {{ app_secrets }}"

    app_services:
      - name: web
        description: Web server
        command: "{{ buster_run }} web"

    app_timers:
      - name: acquire
        description: Acquire documentation
        command: "{{ buster_run }} acquire all"
        schedule: "Mon, 02:00"

  tasks:

  - name: Ensure user
    become: true
    ansible.builtin.user:
      name: "{{ app_user }}"
      comment: Buster user
      groups:
      - "{{ app_group }}"

  - name: Install
    import_role:
      name: pyservice
      tasks_from: setup

  - name: Copy default config
    become: true
    ansible.builtin.copy:
      remote_src: true
      src: "{{ app_code_dir }}/config/mila-config.yaml"
      dest: "{{ app_config_dir }}/mila-config.yaml"
      owner: "{{ app_user }}"

  - name: Create cert directory
    become: true
    ansible.builtin.file:
      path: "{{ app_config_dir }}/cert"
      state: directory
      owner: "{{ app_user }}"
      mode: "0700"

  - name: Copy certificate
    become: true
    ansible.builtin.copy:
      content: "{{ app_ssl_cert }}"
      dest: "{{ app_config_dir }}/cert/cert.pem"
      owner: "{{ app_user }}"
      mode: "0600"

  - name: Copy certificate key
    become: true
    ansible.builtin.copy:
      content: "{{ app_ssl_key }}"
      dest: "{{ app_config_dir }}/cert/cert-key.pem"
      owner: "{{ app_user }}"
      mode: "0600"

  - name: Populate database
    become: true
    become_user: "{{ app_user }}"
    when: app_data_files.matched == 0
    ansible.builtin.command: "{{ conda_run }} {{ buster_run }} acquire all"

  - name: Activate
    import_role:
      name: pyservice
      tasks_from: activate
